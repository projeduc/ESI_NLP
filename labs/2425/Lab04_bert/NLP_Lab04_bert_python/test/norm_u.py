#!/usr/bin/env python
# -*- coding: utf-8 -*-

# This is a part of NLP labs, ESI, Algiers 
# --------------------------------------------------------------------
# Copyright (C) 2025 Abdelkrime Aries (kariminfo0@gmail.com)
# 
# Autors: 
#        - 2025 Abdelkrime Aries (kariminfo0@gmail.com)
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
#  
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os, sys

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from mybert.layers import LayerNorm

# batch_size=2, seq_len=3, features=4
X = [
        [[1.0, 2.0, 1.0, 1.0], [2.0, 3.0, 4.0, 5.0], [3.0, 4.0, 5.0, 6.0]],
        [[4.0, 5.0, 6.0, 7.0], [5.0, 6.0, 7.0, 8.0], [6.0, 7.0, 8.0, 9.0]]
    ]

Y= [
        [
            [-0.5773215414838886, 1.7319646244516655, -0.5773215414838886, -0.5773215414838886], 
            [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552], 
            [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552]
        ], 
        [
            [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552], 
            [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552], 
            [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552]
        ]
        ]
mean= [
    [1.25, 3.5, 4.5], 
    [5.5, 6.5, 7.5]
    ]
std= [
    [0.43302424874364714, 1.1180384608769056, 1.1180384608769056], 
    [1.1180384608769056, 1.1180384608769056, 1.1180384608769056]
    ]
norm= [
    [
        [-0.5773215414838886, 1.7319646244516655, -0.5773215414838886, -0.5773215414838886], 
        [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552], 
        [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552]
    ], 
    [
        [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552], 
        [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552], 
        [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552]
    ]
    ]
Y= [
    [
        [-0.5773215414838886, 1.7319646244516655, -0.5773215414838886, -0.5773215414838886], 
        [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552], 
        [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552]
    ], 
    [
        [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552], 
        [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552], 
        [-1.3416234201722552, -0.44720780672408506, 0.44720780672408506, 1.3416234201722552]
    ]
    ]

dY= [
        [
            [1, 0.5, -1, -0.5], 
            [2, -1, -2, -2], 
            [-1, -1, 1, 1]
        ], 
        [
            [-1, -0.5, 0.75, 1.5], 
            [-2, -0.5, 1.5, 1.5], 
            [1, 0.25, 0.75, 1.75]
        ]
    ]

gamma= [0.9235698121311633, 0.7904196219282933, 0.8528262845067941, 0.4680251403612098]
beta= [0.0, 0.225, -0.1, -0.325]

normc = LayerNorm(dim=4)


def test_Norm_forward():

    Yh = normc.forward(X)

    assert mean == normc.mean
    assert std == normc.std
    assert norm == normc.norm
    assert Y == Yh


def test_Norm_backward():

    Yh = normc.forward(X)
    dX = normc.backward(dY, alpha=0.1)
    assert gamma == normc.gamma
    assert beta == normc.beta





